using System;
using System.Collections.Generic;
using System.Reflection;
using System.Text;

namespace ASimInterfaces
{
    public class Test1
    {
        public List<int>[] sID =  new List<int>[56];
        public List<string>[] sa = new List<string>[56];
        public List<string>[] sb = new List<string>[56];
        public List<string>[] sc = new List<string>[56];
        public List<string>[] sd = new List<string>[56];
        public List<int> sId1 = new List<int>() { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17 };
        public List<string> sa1 = new List<string>() { "叶片数量", "风轮半径", "轮毂半径", "叶片1锥角", "轮毂质心位置", "方位角", "悬垂距离", "主轴位置", "主轴仰角", "机舱质心x", "机舱质心y", "机舱质心z", "机舱中心位置", "塔顶到水平面距离", "塔基到地面距离" };
        public List<string> sb1 = new List<string>() { "-", "m", "m", "deg", "m", "deg", "m", "m", "deg", "m", "m", "m", "m", "m", "m" };
        public List<string> sc1 = new List<string>() { "叶片数量", "风轮半径", "轮毂半径", "叶片1锥角", "轮毂质心到风轮平面与转子轴线相交的点的距离。", "当叶片1上升时用于I/O的方位角。", "悬垂距离。轮毂中心点到塔架中心点（偏航位置）的距离，一般为负。", "定义主轴的位置。", "主轴的仰角，与平行于地面的面的夹角。", "机舱质心到塔架轴线的垂直距离。", "-", "机舱质心到机舱底部（塔顶）距离。", "机舱中心到机舱底部（塔顶）的距离。", "塔顶到水平面的距离。", "塔基到地面的距离。" };
        public List<string> sd1 = new List<string>() { "int", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float" };
        public List<int> sId2 = new List<int>() { 19, 20, 21, 22, 23, 24, 25, 26, 27, 28 };
        public List<string> sa2 = new List<string>() { "叶片1叶尖质量", "叶片2叶尖质量", "叶片3叶尖质量", "轮毂质量", "轮毂惯性矩_转轴", "发电机转轴惯性矩", "机舱质量", "机舱惯性矩_偏航", "偏航轴承质量", "平台质量" };
        public List<string> sb2 = new List<string>() { "kg", "kg", "kg", "kg", "kgm2", "kgm2", "kg", "kgm2", "kg", "kg" };
        public List<string> sc2 = new List<string>() { "叶片1叶尖质量。", "叶片2叶尖质量。", "叶片3叶尖质量。", "轮毂质量", "轮毂关于转子轴的惯性矩", "发电机转轴的惯性矩", "机舱质量", "机舱关于偏航轴的惯性矩，该值必须＞NacMass•(NacCMxn的平方+NacCMyn的平方)", "偏航轴承质量", "平台质量" };
        public List<string> sd2 = new List<string>() { "float", "float", "float", "float", "float", "float", "float", "float", "float", "float" };
        public List<int> sId3 = new List<int>() { 30 };
        public List<string> sa3 = new List<string>() { "叶片的截面数量" };
        public List<string> sb3 = new List<string>() { "-" };
        public List<string> sc3 = new List<string>() { "叶片的截面（节点）数量" };
        public List<string> sd3 = new List<string>() { "int" };
        public List<int> sId4 = new List<int>() { 76, 77 };
        public List<string> sa4 = new List<string>() { "截面数量", "塔架文件" };
        public List<string> sb4 = new List<string>() { "-", "-" };
        public List<string> sc4 = new List<string>() { "用来分析的塔架截面数量，范围为从1（0?）-NTwInpSt", "定义塔架信息输入文件的名字和路径。" };
        public List<string> sd4 = new List<string>() { "int", "string" };
        public List<int> sId5 = new List<int>() { 99, 100, 101, 102 };
        public List<string> sa5 = new List<string>() { "齿轮箱效率", "传动比", "扭转刚度", "扭转阻尼" };
        public List<string> sb5 = new List<string>() { "%", "-", "kgm/s2", "rad/s" };
        public List<string> sc5 = new List<string>() { "变速箱效率", "高速轴与低速轴比值", "等效驱动轴扭转弹簧常数", "等效驱动轴扭转阻尼常数" };
        public List<string> sd5 = new List<string>() { "float", "float", "float", "float" };
        public List<int> sId6 = new List<int>() { 104, 105 };
        public List<string> sa6 = new List<string>() { "生成.ech文件", "控制器通信间隔" };
        public List<string> sb6 = new List<string>() { "-", "s" };
        public List<string> sc6 = new List<string>() { "逻辑开关，用于生成.ech文件，显示控制输入文件的参数设置，用于程序调试，可选择True/false", "控制器通信间隔" };
        public List<string> sd6 = new List<string>() { "bool", "float" };
        public List<int> sId7 = new List<int>() { 169 };
        public List<string> sa7 = new List<string>() { "插值方法" };
        public List<string> sb7 = new List<string>() { "-" };
        public List<string> sc7 = new List<string>() { "整数开关，当用查表法求升力、阻力、俯仰力矩、最小压力系数作为迎角的函数时指定的插值方法，可选择为1 / 3。1：线性差值3：三次样条插值，设置为default = 3" };
        public List<string> sd7 = new List<string>() { "int" };
        public List<int> se7 = new List<int>() { 13 };
        public List<int> sId8 = new List<int>() { 154, 155, 156 };
        public List<string> sa8 = new List<string>() { "插值方法", "翼型文件数量", "翼型文件" };
        public List<string> sb8 = new List<string>() { "-", "-", "-" };
        public List<string> sc8 = new List<string>() { "整数开关，对于多个翼型表的插值方法。可选择为1/2/31:只用每个文件的第一个翼型表2:根据攻角和雷诺数进行2D插值3:根据攻角和UserProp和进行2D插值", "翼型文件数量", "翼型文件名字和路径，叶片数据的输入文件将用线标识符引用这些翼型文件，第一个翼型编号为1，最后一个编号为NumAFfiles值。" };
        public List<string> sd8 = new List<string>() { "int", "string", "string" };
        public List<int> se8 = new List<int>() { 12, 0, 0 };
        public List<int> sId9 = new List<int>() { 171, 172, 173, 174, 175, 176, 177 };
        public List<string> sa9 = new List<string>() { "翼型面积", "坐标点数", "文件路径", "翼型表数量", "雷诺数（百万级）", "气动控制", "非定常气动数据" };
        public List<string> sb9 = new List<string>() { "m2", "-", "-", "-", "M", "-", "-" };
        public List<string> sc9 = new List<string>() { "无量纲翼型面积，目前用不到。", "翼型外型文件中定义翼型外型的坐标点数，加上一个定义气动中心的点数，决定了后续表格中的行数，第一点必须位于气动中心（翼型升阻力的参考点）其余的点应该定义翼型的外部形状。此处若需要定义，则填入外型文件的名字和路径，若不需要定义，则填入0。", "指定文件的名字和路径，若没有定义气动声学模块，则忽略。", "翼型文件中翼型表的数量，该表定义了雷诺数，不同雷诺数下升阻力系数不一样。翼型数据输入文件中的其余参数是为每个表单独输入的。", "雷诺数（百万级）", "表中的气动控制的设置，设置为0表示不用，这个参数和雷诺数只有在AFTabMod=3时才用到，若AFTabMod=1，只用翼型输入文件中的第一个翼型表。", "逻辑开关，设置为True表示非定常气动数据包含在这表里，就是下面的32个系数。AFTabMod=2时需要。" };
        public List<string> sd9 = new List<string>() { "float", "string", "string", "int", "float", "float", "bool" };
        public List<int> se9 = new List<int>() { 0, 0, 0, 0, 0, 0, 1 };
        public List<int> sId10 = new List<int>() { 179, 180, 181, 182, 183 };
        public List<string> sa10 = new List<string>() { "零升力攻角", "失速攻角_大", "失速攻角_小", "eta_e", "C_nalpha" };
        public List<string> sb10 = new List<string>() { "deg", "deg", "deg", "-", "-" };
        public List<string> sc10 = new List<string>() { "零升力攻角", "指定大于失速攻角的攻角（f=0.7），接进于失速攻角", "指定小于失速攻角的攻角（f=0.7），接进于失速攻角", "恢复系数，范围通常在0.85-0.95对于UAMod=1，若设置为default则等效于0.9对于UAMod=1，而对于FLookup=TRUE且其他的UAMod值时设置为1.", "线性区域中2D法向力系数曲线的斜率。" };
        public List<string> sd10 = new List<string>() { "float", "float", "float", "float", "float" };
        public List<int> sId11 = new List<int>() { 186, 187, 188, 189 };
        public List<string> sa11 = new List<string>() { "空气密度", "动力粘度", "轮毂中部高度以上的水深", "重力加速度" };
        public List<string> sb11 = new List<string>() { "kg/m3", "-", "m", "m/s2" };
        public List<string> sc11 = new List<string>() { "空气密度", "动力粘度", "轮毂中部高度以上的水深，当CavitCheck=True时设置", "重力加速度。" };
        public List<string> sd11 = new List<string>() { "float", "float", "float", "float" };
        public List<int> sId12 = new List<int>() { 207, 208, 209 };
        public List<string> sa12 = new List<string>() { "风场文件", "Bladed格式风文件", "是否有.twr塔文件" };
        public List<string> sb12 = new List<string>() { "-", "-", "-" };
        public List<string> sc12 = new List<string>() { "全域流的湍流风场文件名和路径。", "Bladed格式风文件名和路径", "逻辑开关，表示是否有.twr塔文件" };
        public List<string> sd12 = new List<string>() { "string", "string", "bool" };
        public List<int> sId13 = new List<int>() { 221, 222, 223 };
        public List<string> sa13 = new List<string>() { "生成.ech文件", "仿真的最大时长", "仿真步长" };
        public List<string> sb13 = new List<string>() { "-", "s", "s" };
        public List<string> sc13 = new List<string>() { "用于生成.ech文件，显示主文件的参数设置，用于程序调试，可选择ture/false", "仿真的最大时长", "仿真步长，也等于各个模块的最大整数倍计算步长，设置太大容易不收敛" };
        public List<string> sd13 = new List<string>() { "bool", "int", "float" };
        public List<int> sId14 = new List<int>() { 225 };
        public List<string> sa14 = new List<string>() { "module_flag", "CompElast", "CompInflow", "CompAero", "CompServo", "CompHydro", "CompSub", "CompMooring", "CompIce" };
        public List<string> sb14 = new List<string>() { "-", "-", "-", "-", "-", "-", "-", "-", "-" };
        public List<string> sc14 = new List<string>() { "用数组表示各模块开关，依次是CompElast、CompInflow、CompAero、CompServo、CompHydro、CompSub、CompMooring、CompIce", "-", "-", "-", "-", "-", "-", "-", "-" };
        public List<string> sd14 = new List<string>() { "int", "int", "int", "int", "int", "int", "int", "int", "int" };
        public List<int> se14 = new List<int>() { 11, 0, 0, 0, 0, 0, 0, 0, 0 };
        public List<int> sId15 = new List<int>() { 227 };
        public List<string> sa15 = new List<string>() { "module_File" };
        public List<string> sb15 = new List<string>() { "-" };
        public List<string> sc15 = new List<string>() { "string数组表示文件地址，依次是EDFile，BDBldFile_1，BDBldFile_2，BDBldFile_3，InflowFile，AeroFile，ServoFile，HydroFile，SubFile，MooringFile，IceFile\n" +
            "\t\t\t文件/路径输入格式参考：   ../IEA-15-240-RWT/IEA-15-240-RWT_InflowFile.dat" };
        public List<string> sd15 = new List<string>() { "string" };
        public List<int> se15 = new List<int>() { 10 };
        public List<int> sId16 = new List<int>() { 229, 230, 233, 237, 238 };
        public List<string> sa16 = new List<string>() { "Echo", "AA_InputFile", "OLAFInputFileName", "UseBlCm", "ADBlFile_1" };
        public List<string> sb16 = new List<string>() { "-", "-", "-", "-", "-" };
        public List<string> sc16 = new List<string>() { "逻辑开关，用于生成.AD.ech文件，显示气动文件的参数设置，可选择ture/false", "指定气动声学计算的文件名和路径", "指定了这个理论的输入文件名字与路径，当WakeMod=3时才进行设置。", "逻辑开关，在计算中是否包括气动俯仰力矩，可选择为True/False。", "叶片气动信息输入文件的名字及路径" };
        public List<string> sd16 = new List<string>() { "bool", "string", "string", "bool", "string" };
        public List<int> sId17 = new List<int>() { 240, 241, 242, 257 };
        public List<string> sa17 = new List<string>() { "Echo", "Method", "DT", "BldFile_1" };
        public List<string> sb17 = new List<string>() { "-", "-", "s", "-" };
        public List<string> sc17 = new List<string>() { "逻辑开关，用于生成.ech文件，显示结构输入文件的参数设置，用于程序调试，可选择Ture/False", "整数开关，指定插值方法，可选择为1 / 2 / 31:RK4插值2:AB4插值3:ABM4插值", "仿真步长，设置为default表示遵从主输入文件中的时间步长。", "叶片1结构信息输入文件的名字和路径" };
        public List<string> sd17 = new List<string>() { "bool", "int", "float", "string" };
        public List<int> se17 = new List<int>() { 1, 12, 0, 0 };
        public List<int> sId18 = new List<int>() { 259, 260 };
        public List<string> sa18 = new List<string>() { "Echo", "QuasiStaticInit" };
        public List<string> sb18 = new List<string>() { "-", "-" };
        public List<string> sc18 = new List<string>() { "逻辑开关，用于生成.ech文件，显示非线性输入文件的参数设置，用于程序调试，可选择True/false", "逻辑开关，是否应该在初始化时执行准静态解决方案来更好初始化其状态，可选择True/false" };
        public List<string> sd18 = new List<string>() { "bool", "bool" };
        public List<int> sId19 = new List<int>() { 263 };
        public List<string> sa19 = new List<string>() { "SumPrint" };
        public List<string> sb19 = new List<string>() { "-" };
        public List<string> sc19 = new List<string>() { "可设置为True/False，设置为True会产生后缀名为.sum的文件，其中包含风机模型的大量信息" };
        public List<string> sd19 = new List<string>() { "bool" };
        public List<int> sId20 = new List<int>() { 265 };
        public List<string> sa20 = new List<string>() { "WrVTK" };
        public List<string> sb20 = new List<string>() { "-" };
        public List<string> sc20 = new List<string>() { "可视化文件输出方式，可选择为0/1/2/3，0：无可视化文件，1：仅根据初始数据产生可视化文件，2:随时间变化的动画可视化，3:用于阵型" };
        public List<string> sd20 = new List<string>() { "int" };
        public List<int> se20 = new List<int>() { 2 };
        public List<int> sId21 = new List<int>() { 267, 268, 269, 270, 271, 272 };
        public List<string> sa21 = new List<string>() { "SumPrint", "NBlOuts", "BlOutNd", "NTwOuts", "TwOutNd", "OutList" };
        public List<string> sb21 = new List<string>() { "-", "-", "-", "-", "-", "-" };
        public List<string> sc21 = new List<string>() { "逻辑开关，可设置为True/False，设置为True会产生后缀名为.AD.sum的文件，其中包含气动信息输入和插值属性的大量信息", "可输出的叶片截面数量，范围为0-9。只能是正整数。", "代表一个数组，输出的叶片截面的编号，其中编号与叶片几何及结构属性中的数组相对应。数量范围为0-9，具体值范围为1-NBlInpSt。", "可输出的塔筒截面数量，范围为0-9。只能是正整数。", "代表一个数组，输出的塔筒截面的编号，其中编号与塔筒输入属性中的数组相对应。数量范围为0-9，具体值范围为1-NBlInpSt。", "代表一个数组，定义气动模块中可输出的变量。" };
        public List<string> sd21 = new List<string>() { "bool", "int", "int", "int", "int", "string" };
        public List<int> se21 = new List<int>() { 1, 4, 10, 4, 10, 10 };
        public List<int> sId22 = new List<int>() { 274 };
        public List<string> sa22 = new List<string>() { "SumPrint" };
        public List<string> sb22 = new List<string>() { "-" };
        public List<string> sc22 = new List<string>() { "逻辑开关，可设置为True/False，设置为True会产生后缀名为.sum的文件，其中包含气整机建模大量信息" };
        public List<string> sd22 = new List<string>() { "bool" };
        public List<int> sId23 = new List<int>() { 276, 277 };
        public List<string> sa23 = new List<string>() { "SumPrint", "OutList" };
        public List<string> sb23 = new List<string>() { "-", "-" };
        public List<string> sc23 = new List<string>() { "逻辑开关，可设置为True/False，设置为True会产生后缀名为.sum的文件，其中包含风输入的信息。", "代表一个数组，定义风模块可输出的变量，一般为各个点的三个坐标。" };
        public List<string> sd23 = new List<string>() { "bool", "string" };
        public List<int> se23 = new List<int>() { 1, 10 };
        public List<int> sId24 = new List<int>() { 279, 280 };
        public List<string> sa24 = new List<string>() { "SumPrint", "OutFmt" };
        public List<string> sb24 = new List<string>() { "-", "-" };
        public List<string> sc24 = new List<string>() { "逻辑开关，可设置为True/False，设置为True会产生后缀名为.sum的文件，其中包含气非线性建模信息", "用于文本表格输出的格式" };
        public List<string> sd24 = new List<string>() { "bool", "string" };
        public List<int> sId25 = new List<int>() { 282 };
        public List<string> sa25 = new List<string>() { "SumPrint" };
        public List<string> sb25 = new List<string>() { "-" };
        public List<string> sc25 = new List<string>() { "逻辑开关，是否输出sum文件" };
        public List<string> sd25 = new List<string>() { "bool" };
        public List<int> sId26 = new List<int>() { 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44 };
        public List<string> sa26 = new List<string>() { "截面位置(BlFract)", "变桨轴", "质量密度", "挥舞刚度", "摆振刚度", "截面位置(BlSpn)", "预弯", "后掠", "角度", "扭角", "弦长", "翼型序号", "相对厚度" };
        public List<string> sb26 = new List<string>() { "m", "%", "kg/m3", "kgm/s2", "kgm/s2", "-", "m", "m", "m", "deg", "m", "-", "%" };
        public List<string> sc26 = new List<string>() { "从叶片根部开始的第i个测量截面所在位置，并且相对于叶片整体长度进行标准化，第一个截面必须开始于0.0，最后一截面必须结束于1.0，且至少指定两个截面", "变桨轴", "各个截面的质量密度", "各个截面的挥舞刚度", "各个截面的摆振刚度", "从叶片根部开始的第i个测量截面所在位置", "在第i个截面上的预弯，也就是该叶素气动中心的局部平面外偏移后到该点到桨距轴的距离", "在第i个截面上的后掠，也就是该叶素气动中心的局部平面内偏移后到该点到桨距轴的距离", "第i个截面上垂直于翼型平面的矢量相对于桨距轴的角度，面外的", "第i个截面的气动扭角（和结构扭角一样），也就是弦长相对于风轮平面的夹角", "第i个截面的局部弦长", "指定该截面用的是哪个翼型，用序号来表示。", "相对厚度(FAST中没有这个变量，先在界面上保留）" };
        public List<string> sd26 = new List<string>() { "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "int", "float" };
        public List<int> sId27 = new List<int>() { 46, 47, 48, 49 };
        public List<string> sa27 = new List<string>() { "kp_xr", "kp_yr", "kp_zr", "结构扭角" };
        public List<string> sb27 = new List<string>() { "m", "m", "m", "deg" };
        public List<string> sc27 = new List<string>() { "定义各个关键点的物理坐标。", "定义各个关键点的物理坐标。", "定义各个关键点的物理坐标。", "定义各个关键点的结构扭角。" };
        public List<string> sd27 = new List<string>() { "float", "float", "float", "float" };
        public List<int> sId28 = new List<int>() { 51, 52, 53, 54, 55, 56, 57, 58 };
        public List<string> sa28 = new List<string>() { "梁成员总数", "关键点总数", "成员的数量和在这个成员上关键点的数量", "插值函数的阶数", "非线性文件", "截面数量", "阻尼开关", "阻尼" };
        public List<string> sb28 = new List<string>() { "-", "-", "-", "-", "-", "-", "-", "%" };
        public List<string> sc28 = new List<string>() { "指定结构中用的梁成员总数，一般叶片由连续系列的几个成员组成。", "指定用于定义梁成员的关键点总数，每个成员至少由3个关键点定义。", "数组，长度为2，表示成员的数量和在这个成员上关键点的数量", "指定插值函数的阶数", "包含非线性叶片参数的文件名和路径。", "指定用于分析的沿叶片轴线横截面位置的数量，与下面分布参数的数量相对应。", "整数开关，可选择为0 / 10：不考虑结构阻尼1：考虑结构阻尼", "阻尼，数组" };
        public List<string> sd28 = new List<string>() { "int", "int", "int", "int", "string", "int", "int", "float" };
        public List<int> se28 = new List<int>() { 0, 0, 10, 0, 0, 0, 6, 10 };
        public List<int> sId29 = new List<int>() { 60, 61, 62 };
        public List<string> sa29 = new List<string>() { "截面位置", "刚度矩阵", "质量矩阵" };
        public List<string> sb29 = new List<string>() { "-", "-", "-" };
        public List<string> sc29 = new List<string>() { "指定每个分布截面的具体位置，范围为从0-1，无量纲数", "每个截面对应的刚度矩阵", "每个截面对应的质量矩阵" };
        public List<string> sd29 = new List<string>() { "float", "matrix[6*6]", "matrix[6*6]" };
        public List<int> se29 = new List<int>() { 0, 9, 9 };
        public List<int> sId30 = new List<int>() { 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74 };
        public List<string> sa30 = new List<string>() { "阻尼", "频率", "截面数量", "模态刚度调谐", "位置", "Factor_Deflection_x", "Factor_Deflection_y", "Factor_Deflection_z", "Factor_Rotate_x", "Factor_Rotate_y", "Factor_Rotate_z" };
        public List<string> sb30 = new List<string>() { "%", "Hz", "-", "-", "m", "-", "-", "-", "-", "-", "-" };
        public List<string> sc30 = new List<string>() { "存放一阶挥舞、二阶挥舞、一阶摆振结构阻尼系数", "(FAST中没有这个变量，先在界面上保留）", "输入的叶片截面的数量", "模态刚度调谐", "(FAST中没有这个变量，先在界面上保留）", "数组，长度为5，存放叶片一阶挥舞模态的振型系数", "数组，长度为5，存放叶片二阶挥舞模态的振型系数", "数组，长度为5，存放叶片一阶摆振模态的振型系数", "(FAST中没有这个变量，先在界面上保留）", "(FAST中没有这个变量，先在界面上保留）", "(FAST中没有这个变量，先在界面上保留）" };
        public List<string> sd30 = new List<string>() { "float", "float", "int", "float", "float", "float", "float", "float", "float", "float", "float" };
        public List<int> se30 = new List<int>() { 10, 0, 0, 10, 10, 10, 10, 10, 10, 10, 10 };
        public List<int> sId31 = new List<int>() { 79, 80, 81, 82, 83, 84, 85 };
        public List<string> sa31 = new List<string>() { "到地面距离", "直径", "阻力系数", "截面位置", "质量密度", "挥舞刚度", "摆振刚度" };
        public List<string> sb31 = new List<string>() { "m", "m", "-", "-", "kg/m", "kgm/s2", "kgm/s2" };
        public List<string> sc31 = new List<string>() { "各个塔素截面到地面距离。", "各个塔素截面的直径。", "各个塔素截面的阻力系数。", "代表一个数组。从塔架底（顶?）部开始的第i个测量截面所在位置，并且相对于叶片整体长度进行标准化，第一个截面必须开始于0.0，最后一截面必须结束于1.0，且至少指定两个截面", "各个截面的质量密度", "各个截面的挥舞刚度", "各个截面的摆振刚度" };
        public List<string> sd31 = new List<string>() { "float", "float", "float", "float", "float", "float", "float" };
        public List<int> se31 = new List<int>() { 10, 10, 10, 10, 10, 10, 10 };
        public List<int> sId32 = new List<int>() { 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97 };
        public List<string> sa32 = new List<string>() { "阻尼", "频率", "塔架节点数量", "模态刚度调谐", "位置", "Factor_Deflection_x1", "Factor_Deflection_x2", "Factor_Deflection_y1", "Factor_Deflection_y2", "Factor_Rotate_x", "Factor_Rotate_y" };
        public List<string> sb32 = new List<string>() { "%", "Hz", "-", "-", "m", "-", "-", "-", "-", "-", "-" };
        public List<string> sc32 = new List<string>() { "存放塔架一阶、二阶前后和一阶、二阶左右阻尼系数", "各阶频率，(FAST中没有这个变量，先在界面上保留）", "输入的塔架节点的数量", "模态刚度调谐", "(FAST中没有这个变量，先在界面上保留）", "数组，长度为5，存放塔架一阶前后模态的振型系数", "数组，长度为5，存放塔架二阶前后模态的振型系数", "数组，长度为5，存放塔架一阶摆振左右的振型系数", "数组，长度为5，存放塔架二阶摆振左右的振型系数", "(FAST中没有这个变量，先在界面上保留）", "(FAST中没有这个变量，先在界面上保留）" };
        public List<string> sd32 = new List<string>() { "float", "float", "int", "float", "float", "float", "float", "float", "float", "float", "float" };
        public List<int> se32 = new List<int>() { 10, 0, 0, 10, 10, 10, 10, 10, 10, 10, 10 };
        public List<int> sId33 = new List<int>() { 107, 108, 109, 110, 111 };
        public List<string> sa33 = new List<string>() { "控制模式", "TPCOn", "TPitManS", "叶片的变桨速度", "BlPitchF" };
        public List<string> sb33 = new List<string>() { "-", "s", "s", "deg/s", "deg" };
        public List<string> sc33 = new List<string>() { "整数开关，选择桨距控制模式，可选择0/3/4/5，0：无桨距控制3:用户自定义4:simulink5:dll", "定义开始桨距控制（强制变桨）的时间", "叶片1/2/3开始强制变桨的时间", "叶片1/2/3的变桨速度", "叶片1/2/3最后要变到多少度" };
        public List<string> sd33 = new List<string>() { "int", "float", "float", "float", "float" };
        public List<int> se33 = new List<int>() { 7, 0, 10, 10, 10 };
        public List<int> sId34 = new List<int>() { 113, 114, 115, 116, 117, 118, 119, 120 };
        public List<string> sa34 = new List<string>() { "变速控制模式", "发电机模式", "发电机效率", "开始发电机的方法", "停止发电机的方法", "启动转速", "启动时间", "关闭发电机的时间" };
        public List<string> sb34 = new List<string>() { "-", "-", "%", "-", "-", "rpm", "s", "s" };
        public List<string> sc34 = new List<string>() { "整数开关，选择变速控制模式，可选择0/1/3/4/50：无变速控制1:简单变速控制3:用户自定义4:simulink5:dll", "整数开关，发电机模式，可选择1/2/3，VSContrl=0时才使用，1:简单模式2:Thevenin模式3:用户自定义", "发电机效率（%）当GenModel=1时才使用", "逻辑开关，开始发电机的方法，可选择True/FalseTrue：使用TimGenOnFalse：使用SpdGenOn", "逻辑开关，停止发电机的方法，可选择True/FalseTrue：使用TimGenOnFalse：发电机功率为0时停止", "启动发电机的发电机转速（rpm），当GenTiStr=False时才使用", "启动发电机的开始时间，当GenTiStr=True时才使用", "关闭发电机的时间，当GenTiStp=True时才使用" };
        public List<string> sd34 = new List<string>() { "int", "int", "float", "bool", "bool", "float", "float", "float" };
        public List<int> se34 = new List<int>() { 5, 3, 0, 1, 1, 0, 0, 0 };
        public List<int> sId35 = new List<int>() { 122, 123, 124, 125 };
        public List<string> sa35 = new List<string>() { "额定转速", "额定转矩", "转矩常量", "额定发电机斜率" };
        public List<string> sb35 = new List<string>() { "rpm", "Nm", "-", "-" };
        public List<string> sc35 = new List<string>() { "定义简单变速发电机控制中的额定转速，当VSContrl=1时才使用", "定义简单变速发电机控制中区域三中的额定转矩，当VSContrl=1时才使用", "定义简单变速发电机控制中区域二中的转矩常量，当VSContrl=1时才使用", "定义简单变速发电机控制中区域2.5中的额定发电机斜率（%），当VSContrl=1时才使用" };
        public List<string> sd35 = new List<string>() { "float", "float", "float", "float" };
        public List<int> sId36 = new List<int>() { 127 };
        public List<string> sa36 = new List<string>() { "线频率" };
        public List<string> sb36 = new List<string>() { "Hz" };
        public List<string> sc36 = new List<string>() { "线频率，当VSContrl=0和GenModel=2才使用" };
        public List<string> sd36 = new List<string>() { "float" };
        public List<int> sId37 = new List<int>() { 129, 130, 131, 132 };
        public List<string> sa37 = new List<string>() { "高速轴刹车模式", "启动时间", "完全启动的时间", "完全启动时的转矩" };
        public List<string> sb37 = new List<string>() { "-", "s", "s", "Nm" };
        public List<string> sc37 = new List<string>() { "整数开关，高速轴刹车模式，可选择0/1/3/4/50：无1:简单模式3:用户自定义4:simulink5:dll", "启动高速制动器的时间", "高速制动器完全启动的时间，当HSSBrMode=1时才使用", "高速制动器完全启动时的转矩" };
        public List<string> sd37 = new List<string>() { "int", "float", "float", "float" };
        public List<int> sId38 = new List<int>() { 134 };
        public List<string> sa38 = new List<string>() { "偏航控制模式" };
        public List<string> sb38 = new List<string>() { "-" };
        public List<string> sc38 = new List<string>() { "整数开关，偏航控制模式，可选择0/3/4/50：无偏航控制3:用户自定义4:simulink5:dll" };
        public List<string> sd38 = new List<string>() { "int" };
        public List<int> sId39 = new List<int>() { 136, 137 };
        public List<string> sa39 = new List<string>() { "是否开启", "机舱阻尼文件" };
        public List<string> sb39 = new List<string>() { "-", "-" };
        public List<string> sc39 = new List<string>() { "逻辑开关，是否开启机舱调谐阻尼器控制，可选择True/False", "机舱调谐质量阻尼文件的名字，当CompNTMD=false时不启用" };
        public List<string> sd39 = new List<string>() { "bool", "string" };
        public List<int> sId40 = new List<int>() { 139, 140, 141, 142 };
        public List<string> sa40 = new List<string>() { "DLL的名字和路径", "DLL输入文件", "DLL程序的名字", "DLL的时间增量" };
        public List<string> sb40 = new List<string>() { "-", "-", "-", "s" };
        public List<string> sc40 = new List<string>() { "DLL的名字和路径", "DLL输入文件的名字和路径", "DLL调用的程序的名字", "DLL的时间增量" };
        public List<string> sd40 = new List<string>() { "string", "string", "string", "float" };
        public List<int> sId41 = new List<int>() { 144, 145, 146 };
        public List<string> sa41 = new List<string>() { "转矩-转速点数", "转速值", "转矩值" };
        public List<string> sb41 = new List<string>() { "-", "rpm", "Nm" };
        public List<string> sc41 = new List<string>() { "转矩-转速查找表重的点数", "代表一个数组，查找表中的转速值", "代表一个数组，查找表中的转矩值" };
        public List<string> sd41 = new List<string>() { "int", "float", "float" };
        public List<int> se41 = new List<int>() { 0, 10, 10 };
        public List<int> sId42 = new List<int>() { 148 };
        public List<string> sa42 = new List<string>() { "变桨执行器" };
        public List<string> sb42 = new List<string>() { "-" };
        public List<string> sc42 = new List<string>() { "逻辑开关，是否开启俯仰执行器，可选择为True/false" };
        public List<string> sd42 = new List<string>() { "bool" };
        public List<int> sId43 = new List<int>() { 150, 151 };
        public List<string> sa43 = new List<string>() { "是否要执行线性化", "计算稳态运行点" };
        public List<string> sb43 = new List<string>() { "-", "-" };
        public List<string> sc43 = new List<string>() { "可选择True/False，表示是否要执行线性化", "可选择True/False，表示是否计算稳态运行点。" };
        public List<string> sd43 = new List<string>() { "bool", "bool" };
        public List<int> sId44 = new List<int>() { 158, 159, 160, 161, 162 };
        public List<string> sa44 = new List<string>() { "行数", "攻角", "升力系数", "阻力系数", "俯仰力矩系数" };
        public List<string> sb44 = new List<string>() { "-", "deg", "-", "-", "-" };
        public List<string> sc44 = new List<string>() { "静态翼型数据表中的行数，必须大于等于1.", "代表一个数组，从-180°到+180°的攻角，从攻角到俯仰力矩系数这四列的顺序要与气动信息输入文件中翼型定义中InCol_Alfa，InCol_Cl，InCol_Cd，InCol_Cm设置相对应。", "代表一个数组，对应攻角下的升力系数", "代表一个数组，对应攻角下的阻力系数", "代表一个数组，对应攻角下的俯仰力矩系数" };
        public List<string> sd44 = new List<string>() { "int", "float", "float", "float", "float" };
        public List<int> se44 = new List<int>() { 0, 10, 10, 10, 10 };
        public List<int> sId45 = new List<int>() { 164, 165, 166, 167, 168 };
        public List<string> sa45 = new List<string>() { "坐标数", "参考点横坐标", "参考点纵坐标", "横坐标", "纵坐标" };
        public List<string> sb45 = new List<string>() { "-", "m", "m", "m", "m" };
        public List<string> sc45 = new List<string>() { "翼型外型文件中的坐标数，包括了额外翼型参考点的坐标。必须恰好为0或者≥3.", "翼型参考点的横坐标，只有一个点，由局部弦长标准化", "翼型参考点的纵坐标，只有一个点，由局部弦长标准化", "代表一个数组，定义翼型外型的各个坐标点的横坐标，共有NumCoords-1行，由局部弦长标准化。", "代表一个数组，定义翼型外型的各个坐标点的纵坐标，共有NumCoords-1行，由局部弦长标准化。" };
        public List<string> sd45 = new List<string>() { "int", "float", "float", "float", "float" };
        public List<int> se45 = new List<int>() { 0, 0, 0, 10, 10 };
        public List<int> sId46 = new List<int>() { 192, 193, 194, 195, 196, 197, 198 };
        public List<string> sa46 = new List<string>() { "生成.ech文件", "风文件类型", "风传播的方向", "输出风速点的数量", "WindVxiList", "WindVyiList", "WindVziList" };
        public List<string> sb46 = new List<string>() { "-", "-", "deg", "-", "m", "m", "m" };
        public List<string> sc46 = new List<string>() { "逻辑开关，用于生成.ech文件，显示风输入文件的参数设置，用于程序调试，可选择ture/false", "整数开关，指定风文件类型，可选择1 / 2 / 3 / 4 / 5 / 61：定常入流风.hh /.wnd格式2：均匀风3：湍流风.bts格式4：bladed格式风文件5：HAWC格式风文件6：用户自定义", "风传播的方向", "输出风速点的数量", "代表一个数组，各个输出风速点的横坐标", "代表一个数组，各个输出风速点的纵坐标", "代表一个数组，各个输出风速点的z坐标" };
        public List<string> sd46 = new List<string>() { "bool", "int", "float", "int", "float", "float", "float" };
        public List<int> se46 = new List<int>() { 1, 8, 0, 0, 10, 10, 10 };
        public List<int> sId47 = new List<int>() { 200, 201, 202 };
        public List<string> sa47 = new List<string>() { "轮毂高度处的风速", "轮毂中心高度", "风剪切指数" };
        public List<string> sb47 = new List<string>() { "m/s", "m", "-" };
        public List<string> sc47 = new List<string>() { "轮毂高度处的风速", "轮毂中心高度", "风剪切指数" };
        public List<string> sd47 = new List<string>() { "float", "float", "float" };
        public List<int> sId48 = new List<int>() { 204, 205, 206 };
        public List<string> sa48 = new List<string>() { "均匀风文件", "轮毂中心高度", "参考长度" };
        public List<string> sb48 = new List<string>() { "-", "m", "m" };
        public List<string> sc48 = new List<string>() { "均匀风时间序列数据的文件名和路径。", "轮毂中心高度", "一般为转子直径" };
        public List<string> sd48 = new List<string>() { "string", "float", "float" };
        public List<int> sId49 = new List<int>() { 211 };
        public List<string> sa49 = new List<string>() { "FileName_u" };
        public List<string> sb49 = new List<string>() { "-" };
        public List<string> sc49 = new List<string>() { "包含u分量的脉动风文件名和路径。" };
        public List<string> sd49 = new List<string>() { "string" };
        public List<int> sId50 = new List<int>() { 213 };
        public List<string> sa50 = new List<string>() { "ScaleMethod" };
        public List<string> sb50 = new List<string>() { "-" };
        public List<string> sc50 = new List<string>() { "整数开关，湍流缩放方法，可选择0 / 1 / 20：无缩放1：直接缩放2：根据期望的标准差计算比例因子。" };
        public List<string> sd50 = new List<string>() { "int" };
        public List<int> sId51 = new List<int>() { 215, 216, 217, 218 };
        public List<string> sa51 = new List<string>() { "参考高度风速", "风文件类型", "风剪切指数", "地表粗糙度" };
        public List<string> sb51 = new List<string>() { "m/s", "-", "-", "m" };
        public List<string> sc51 = new List<string>() { "参考高度处的水平风速", "整数开关，指定风文件类型，可选择为0 / 1 / 20:定常1：对数的2：指数的", "风剪切指数", "地表粗糙度" };
        public List<string> sd51 = new List<string>() { "float", "int", "float", "float" };
        public List<int> sId52 = new List<int>() { 232 };
        public List<string> sa52 = new List<string>() { "SkewMod" };
        public List<string> sb52 = new List<string>() { "-" };
        public List<string> sc52 = new List<string>() { "指定斜尾迹修正模型的类型，当WakeMod = 1时设置，可选择1 / 2 / 31:使用无附加偏航斜尾流修正的无耦合叶素动量理论2:使用Pitt / Peters修正模型3:" };
        public List<string> sd52 = new List<string>() { "int" };
        public List<int> sId53 = new List<int>() { 235, 236 };
        public List<string> sa53 = new List<string>() { "非定常气动模型1:原始模型2:经Gonzalez发展后的模型3:经Minemma / Pierce发展后的模型", "Flookup" };
        public List<string> sb53 = new List<string>() { "-", "-" };
        public List<string> sc53 = new List<string>() { "整数开关，指定非定常气动模型，可选择1 / 2 / 3，当AFAeroMod = 2时进行设置：1:原始模型2:经Gonzalez发展后的模型3:经Minemma / Pierce发展后的模型", "逻辑开关，确定如何计算无量纲分离距离值，可选择为True / False，目前只设置为True。True：通过查找静态升力和阻力系数来确定False：使用最合适的指数方程来确定" };
        public List<string> sd53 = new List<string>() { "int", "bool" };
        public List<int> sId54 = new List<int>() { 244 };
        public List<string> sa54 = new List<string>() { "DOFOrder" };
        public List<string> sb54 = new List<string>() { "-" };
        public List<string> sc54 = new List<string>() { "用数组表示自由度，依次是FlapDOF1、FlapDOF2、EdgeDOF、TeetDOF、DrTrDOF、GenDOF、YawDOF、TwFADOF1、TwFADOF2、TwSSDOF1、TwSSDOF2、PtfmSgDOF、PtfmSwDOF、PtfmHvDOF、PtfmRDOF、PtfmPDOF、PtfmYDOF，可设置为True/False。" };
        public List<string> sd54 = new List<string>() { "bool" };
        public List<int> sId55 = new List<int>() { 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256 };
        public List<string> sa55 = new List<string>() { "叶片初始叶尖面外位移", "叶片初始叶尖面内位移", "叶片1初始桨距角", "叶片2初始桨距角", "叶片3初始桨距角", "初始teeter角", "叶片1初始方位角", "初始风轮转速", "初始机舱偏航角", "塔顶初始前后位移", "塔顶初始左右位移" };
        public List<string> sb55 = new List<string>() { "m", "m", "deg", "deg", "deg", "deg", "deg", "rpm", "deg", "m", "m" };
        public List<string> sc55 = new List<string>() { "叶片初始叶尖面外位移", "叶片初始叶尖面内位移", "叶片1初始桨距角", "叶片2初始桨距角", "叶片3初始桨距角", "初始teeter角，三叶片无效", "叶片1初始方位角", "初始风轮转速", "初始机舱偏航角", "塔顶初始前后位移", "塔顶初始左右位移" };
        public List<string> sd55 = new List<string>() { "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float" };

    }
}
